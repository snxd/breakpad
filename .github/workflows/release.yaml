name: Release
on: [push, workflow_dispatch]

jobs:
  build:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.runs-on }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Release - Ubuntu
            short-name: lin64
            runs-on: ubuntu-latest
            compiler: clang
            cxx-compiler: clang++

          - name: Release - macOS
            short-name: mac64
            runs-on: macos-latest

          - name: Release - Windows
            short-name: win64
            runs-on: windows-latest
            cmake-args: -D CMAKE_GENERATOR_PLATFORM=x64

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Install packages (Ubuntu)
      if: runner.os == 'Linux'
      run: sudo apt-get install -y ninja-build

    - name: Download Linux Syscall Support
      if: runner.os == 'Linux'
      run: git clone https://chromium.googlesource.com/linux-syscall-support src/third_party/lss

    - name: Compiling source code
      run: |
        cmake -S . -B build ${{ matrix.cmake-args }} -D BUILD_SHARED_LIBS=OFF -D CMAKE_BUILD_TYPE=MinSizeRel
        cmake --build build --config MinSizeRel
      env:
        CC: ${{ matrix.compiler }}
        CXX: ${{ matrix.cxx-compiler }}

    - name: Upload artifacts (Windows)
      uses: actions/upload-artifact@v3
      if: runner.os == 'Windows'
      with:
        name: breakpad-utilities-${{ matrix.short-name }}
        path: |
          build/MinSizeRel/minidump*
          build/MinSizeRel/dump_sym*
          build/MinSizeRel/msdia*
        retention-days: 7

    - name: Upload artifacts (Linux)
      uses: actions/upload-artifact@v3
      if: runner.os != 'Windows'
      with:
        name: breakpad-utilities-${{ matrix.short-name }}
        path: |
          build/minidump*
          build/dump_sym*
        retention-days: 7

    - name: Package release (macOS/Linux)
      shell: bash
      if: runner.os != 'Windows'
      run: 7z a -tzip ../breakpad-utilities-${{ matrix.short-name }}.zip minidump* dump_sym*
      working-directory: build

    - name: Package release (Windows)
      if: runner.os == 'Windows'
      shell: bash
      run: 7z a -tzip ../../breakpad-utilities-${{ matrix.short-name }}.zip minidump*.exe dump_sym*.exe msdia*.dll
      working-directory: build/MinSizeRel

    - name: Upload release
      uses: svenstaro/upload-release-action@v1-release
      if: env.GITHUB_TOKEN != ''
      with:
        asset_name: breakpad-utilities-${{ matrix.short-name }}.zip
        file: breakpad-utilities-${{ matrix.short-name }}.zip
        tag: latest
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        overwrite: true
      env:
        GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
